package com.tang.model;

import com.google.common.base.Strings;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.tang.bean.RequestBean;
import com.tang.config.OAConfig;
import com.tang.model.base.BaseTeacher;
import com.tang.util.DateUtils;
import com.tang.util.IDKit;
import com.tang.util.ParamKit;
import com.tang.util.SysConstant;
import org.apache.xmlbeans.impl.tool.Extension;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Teacher extends BaseTeacher<Teacher> {
	public static final Teacher dao = new Teacher();

	/**
	 * 系主任添加教师
	 * @param requestBean
	 * @return
	 */
	public Boolean addTeacherInfo(RequestBean requestBean) throws Exception{
		String name = ParamKit.checkObjectNotNull(requestBean,"teacherName");
		String sex = ParamKit.checkObjectNotNull(requestBean,"sex");
		String bornDate = ParamKit.checkObjectNotNull(requestBean,"bornDate");
		String classId = ParamKit.checkObjectNotNull(requestBean,"classId");
		String collegeId = ParamKit.checkObjectNotNull(requestBean,"collegeId");
		String schoolId = ParamKit.checkObjectNotNull(requestBean,"schoolId");
		String email = ParamKit.checkObjectNotNull(requestBean,"email");
		Record teacher = new Record();
		teacher.set("id", IDKit.uuid())
				.set("isDelete", SysConstant.ISDELETE.NO)
				.set("createTime", DateUtils.getCurrentDate())
				.set("updateTime",DateUtils.getCurrentDate())
				.set("teacherName",name)
				.set("sex",sex)
				.set("bornDate",bornDate)
				.set("classId",classId)
				.set("collegeId",collegeId)
				.set("schoolId",schoolId)
				.set("email",email);
		Boolean result = Db.save("teacher", teacher);
		if (result){
			return result;
		}else {
			throw new Exception("添加教师失败！");
		}
	}

	/**
	 * 获取教师列表
	 * @param requestBean
	 * @return
	 */
	public Page<Record> queryTeacher(RequestBean requestBean){

		String teacherName = ParamKit.checkObjectNotNull(requestBean,"teacherName");
		String collegeId = ParamKit.checkObjectNotNull(requestBean,"collegeId");
		String schoolId = ParamKit.checkObjectNotNull(requestBean,"schoolId");
		String classId = ParamKit.checkObjectNotNull(requestBean,"classId");
		String select = "SELECT teacher.*,class.className,college.collegeName,school.schoolName";
		StringBuilder sqlExcept = new StringBuilder("FROM teacher,class,college,school " +
				"WHERE teacher.schoolId = ? AND teacher.collegeId = ? " +
				"AND teacher.isDelete = ? AND teacher.classId = class.id ");
		List<Object> paras = new ArrayList<Object>();
		paras.add(schoolId);
		paras.add(collegeId);
		paras.add(SysConstant.ISDELETE.NO);
		if (!Strings.isNullOrEmpty(classId)){
			sqlExcept.append(" AND teacher.classId = ? ");
			paras.add(classId);
		}
		if (!Strings.isNullOrEmpty(teacherName)){
			sqlExcept.append(" AND teacher.teacherName LIKE ? ");
			paras.add("%"+teacherName+"%");
		}
		Page<Record> recordPage = Db.paginate(requestBean.getPageInfo().getCurrentPage(), requestBean.getPageInfo().getPageSize(), select, sqlExcept.toString(), paras.toArray());
		return recordPage;
	}

}
